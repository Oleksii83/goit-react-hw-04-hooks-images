{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/services/gallery-api.js","Components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","value","setValue","className","s","SearchForm","event","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","url","tags","modalUrl","onClick","src","alt","ImageGalleryItemImage","Button","loader","query","color","height","width","timeout","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","console","log","currentTarget","page","fetch","then","res","ok","json","Promise","reject","Error","Status","ImageGallery","pictures","setPictures","setError","status","setStatus","setPage","modalIsOpen","setModalIsOpen","setModalUrl","API","total","hits","catch","finally","toggleModal","map","picture","webformatURL","largeImageURL","id","result","length","scrollTo","top","documentElement","scrollHeight","behavior","warning","message","App","setQuery","autoClose","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.003072cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1nUkR\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__2hVNo\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3c-tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3kj40\",\"Modal\":\"Modal_Modal__2ODeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1OQvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2z20G\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({ onSubmit }) {\n  const [value, setValue] = useState('');\n\n  const handleInputChange = event => {\n    setValue(event.target.value);\n  };\n\n  const reset = () => {\n    setValue('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (value.trim() === '') {\n      return toast.error('Enter query to search');\n    }\n    onSubmit(value);\n    reset();\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={value}\n          onChange={handleInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n// export default class Searchbar extends Component {\n//   state = {\n//     value: '',\n//   };\n\n//   handleNameChange = event => {\n//     this.setState({ value: event.currentTarget.value.toLowerCase() });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n\n//     if (this.state.value.trim() === '') {\n//       toast('Enter name photo');\n//       return;\n//     }\n//     this.props.onSubmit(this.state.value);\n//     this.setState({ value: '' });\n//   };\n\n//   render() {\n//     return (\n//       <header className={s.Searchbar}>\n//         <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n//           <button type=\"submit\" className={s.SearchFormButton}>\n//             <span className={s.SearchFormButtonLabel}>Search</span>\n//           </button>\n\n//           <input\n//             className={s.SearchFormInput}\n//             type=\"text\"\n//             value={this.state.value}\n//             onChange={this.handleNameChange}\n//             autocomplete=\"off\"\n//             autofocus\n//             placeholder=\"Search images and photos\"\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// Searchbar.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ url, tags, modalUrl, onClick }) => {\n  return (\n    <li className={s.ImageGalleryItem} onClick={() => onClick(modalUrl)}>\n      <img src={url} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  modalUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\n\nexport default function loader({ query }) {\n  //other logic\n\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ url, onClose }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    console.log('click');\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        <img src={url} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nexport default Modal;\n\n// export default class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillMount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = e => {\n//     if (e.code === 'Escape') {\n//       this.props.onClose();\n//     }\n//   };\n\n//   handleBackdropClick = e => {\n//     console.log('click');\n//     if (e.target === e.currentTarget) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     const { url, onClose } = this.props;\n\n//     return createPortal(\n//       <div className={s.Overlay} onClick={onClose}>\n//         <div className={s.Modal}>\n//           <img src={url} alt=\"\" />\n//           {this.props.children}\n//         </div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","const url = 'https://pixabay.com/api/';\nconst key = '22354412-39f12e0c13d349d19862b3301';\n\nconst getPhoto = (query, page) => {\n  return fetch(\n    `${url}?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Нет такого имени `));\n  });\n};\n\nexport default { getPhoto };\n","import { useState, useEffect } from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport API from '../services/gallery-api';\nimport { toast } from 'react-toastify';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction ImageGallery({ query }) {\n  const [pictures, setPictures] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalUrl, setModalUrl] = useState('');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setStatus(Status.PENDING);\n\n    API.getPhoto(query, 1)\n      .then(pictures => {\n        if (pictures.total === 0) {\n          return toast.error(`No result for \"${query}\". Try another query`);\n        }\n        setPictures(pictures.hits);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      })\n      .finally(() => {\n        setStatus(Status.RESOLVED);\n        setPage(2);\n      });\n  }, [query]);\n\n  const getNextPagePictures = () => {\n    setStatus('pending');\n\n    API.getPhoto(query, page)\n      .then(result => {\n        if (result.hits.length === 0) {\n          toast.warning(`No more pictures for \"${query}\" query`);\n          return;\n        }\n        setPictures(pictures => [...pictures, ...result.hits]);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      })\n      .finally(() => {\n        setPage(page + 1);\n      });\n    setStatus(Status.RESOLVED);\n  };\n\n  const toggleModal = url => {\n    setModalIsOpen(!modalIsOpen);\n    setModalUrl(url);\n  };\n\n  if (status === Status.IDLE) {\n    return null;\n  }\n\n  if (status === Status.RESOLVED || status === Status.PENDING) {\n    return (\n      <>\n        <ul className={s.ImageGallery}>\n          {pictures &&\n            pictures.map(picture => (\n              <ImageGalleryItem\n                key={picture.id}\n                url={picture.webformatURL}\n                tags={picture.tags}\n                modalUrl={picture.largeImageURL}\n                onClick={toggleModal}\n              />\n            ))}\n        </ul>\n        {status === Status.PENDING && <Loader />}\n        {pictures && <Button onClick={getNextPagePictures} />}\n\n        {modalIsOpen && <Modal onClose={toggleModal} url={modalUrl} />}\n      </>\n    );\n  }\n\n  if (status === Status.REJECTED) {\n    return <h2>{error.message}</h2>;\n  }\n}\n\nexport default ImageGallery;\n\n// ImageGallery.propTypes = {\n//   query: PropTypes.string.isRequired,\n// };\n\n// class ImageGallery extends Component {\n//   state = {\n//     pictures: null,\n//     error: null,\n//     status: 'idle',\n//     page: 1,\n//     isModalOpen: false,\n//     modalUrl: '',\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const { query } = this.props;\n//     const { page } = this.state;\n//     if (prevProps.query !== query) {\n//       this.setState({ pictures: null, status: 'pending', page: 1 });\n\n//       API.getPhoto(query, page)\n//         .then(pictures => {\n//           if (pictures.total === 0) {\n//             return toast.error(`No result for ${query}. Try another query`);\n//           }\n//           this.setState({\n//             pictures: pictures.hits,\n//           });\n//         })\n//         .catch(error => this.setState({ error, status: 'rejected' }))\n//         .finally(() =>\n//           this.setState(prevState => {\n//             return { status: 'idle', page: prevState.page + 1 };\n//           }),\n//         );\n//     }\n//   }\n\n//   getNextPagePictures = () => {\n//     const { page } = this.state;\n//     const { query } = this.props;\n\n//     this.setState({ status: 'pending' });\n\n//     API.getPhoto(query, page)\n//       .then(pictures => {\n//         if (pictures.hits.length === 0) {\n//           console.log('lenght 0');\n//           toast.warning(`No more pictures for \"${query}\" query`);\n//           return;\n//         }\n//         this.setState(prevState => {\n//           return {\n//             pictures: [...prevState.pictures, ...pictures.hits],\n//             page: prevState.page + 1,\n//           };\n//         });\n//         window.scrollTo({\n//           top: document.documentElement.scrollHeight,\n//           behavior: 'smooth',\n//         });\n//       })\n//       .catch(error => this.setState({ error, status: 'rejected' }))\n//       .finally(() => this.setState({ status: 'idle' }));\n//   };\n\n//   toggleModal = url => {\n//     this.setState(prevState => {\n//       return {\n//         isModalOpen: !prevState.isModalOpen,\n//         modalUrl: url,\n//       };\n//     });\n//   };\n\n//   render() {\n//     const { pictures, error, status, isModalOpen, modalUrl } = this.state;\n\n//     if (status === 'idle') {\n//       return (\n//         <>\n//           <ul className={s.ImageGallery}>\n//             {pictures &&\n//               pictures.map(picture => (\n//                 <ImageGalleryItem\n//                   key={picture.id}\n//                   url={picture.webformatURL}\n//                   tags={picture.tags}\n//                   modalUrl={picture.largeImageURL}\n//                   onClick={this.toggleModal}\n//                 />\n//               ))}\n//           </ul>\n//           {pictures && <Button onClick={this.getNextPagePictures} />}\n//           {isModalOpen && <Modal onClose={this.toggleModal} url={modalUrl} />}\n//         </>\n//       );\n//     }\n\n//     if (status === 'rejected') {\n//       return <h2>{error.message}</h2>;\n//     }\n\n//     if (status === 'pending') {\n//       return (\n//         <>\n//           <ul className={s.ImageGallery}>\n//             {pictures &&\n//               pictures.map(picture => (\n//                 <ImageGalleryItem key={picture.id} url={picture.webformatURL} tags={picture.tags} />\n//               ))}\n//           </ul>\n//           <Loader />\n//           <Button onClick={this.getNextPagePictures} />\n//         </>\n//       );\n//     }\n//   }\n// }\n\n// export default ImageGallery;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  // const [loading, SetLoading] = useState(false)\n\n  const onSubmit = query => {\n    setQuery(query);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onSubmit} />\n      {/* {this.state.loading && <h1> Downloading... </h1>} */}\n      <ImageGallery query={query} />\n\n      <ToastContainer autoClose={3000} position=\"top-left\" />\n    </div>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     query: '',\n//     loading: false,\n//   };\n\n//   componentDidMount() {}\n\n//   onSubmit = query => {\n//     this.setState({ query });\n//     console.log(query);\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Searchbar onSubmit={this.onSubmit} />\n//         {/* {this.state.loading && <h1> Downloading... </h1>} */}\n//         <ImageGallery query={this.state.query} />\n\n//         <ToastContainer autoClose={3000} position=\"top-left\" />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1x92C\",\"SearchForm\":\"Searchbar_SearchForm__16Q8x\",\"SearchFormButton\":\"Searchbar_SearchFormButton__19tXD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__guyvP\",\"SearchFormInput\":\"Searchbar_SearchFormInput__sjcg-\"};"],"sourceRoot":""}