{"version":3,"sources":["Components/ImageGallery/ImageGallery.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/Button/Button.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/services/gallery-api.js","Components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","value","handleNameChange","event","setState","currentTarget","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","placeholder","Component","ImageGalleryItem","url","tags","modalUrl","onClick","src","alt","ImageGalleryItemImage","Button","loader","query","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","console","log","target","window","addEventListener","removeEventListener","createPortal","Overlay","children","page","fetch","then","res","ok","json","Promise","reject","Error","ImageGallery","pictures","error","status","isModalOpen","getNextPagePictures","API","hits","length","warning","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","toggleModal","prevProps","total","map","picture","webformatURL","largeImageURL","id","message","App","loading","autoClose","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c0552ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1OQvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1nUkR\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__2hVNo\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3c-tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3kj40\",\"Modal\":\"Modal_Modal__2ODeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2z20G\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class Searchbar extends Component {\n  state = {\n    value: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ value: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.value.trim() === '') {\n      toast('Enter name photo');\n      return;\n    }\n    this.props.onSubmit(this.state.value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleNameChange}\n            // autocomplete=\"off\"\n            // autofocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ url, tags, modalUrl, onClick }) => {\n  return (\n    <li className={s.ImageGalleryItem} onClick={() => onClick(modalUrl)}>\n      <img src={url} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  modalUrl: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\n\nexport default function loader({ query }) {\n  //other logic\n\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillMount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    console.log('click');\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { url, onClose } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={onClose}>\n        <div className={s.Modal}>\n          <img src={url} alt=\"\" />\n          {this.props.children}\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","const getPhoto = (query, page) => {\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=22354412-39f12e0c13d349d19862b3301&image_type=photo&orientation=horizontal&per_page=12\n`,\n    // `https://pixabay.com/api/?key=22354412-39f12e0c13d349d19862b3301&q=${query}&image_type=photo&per_page=12&page=1`,\n  ).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Нет такого имени ${query}`));\n  });\n};\n\nexport default { getPhoto };\n","import { Component } from 'react';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\nimport API from '../services/gallery-api';\nimport { toast } from 'react-toastify';\n\nclass ImageGallery extends Component {\n  state = {\n    pictures: null,\n    error: null,\n    status: 'idle',\n    page: 1,\n    isModalOpen: false,\n    modalUrl: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.props;\n    const { page } = this.state;\n    if (prevProps.query !== query) {\n      this.setState({ pictures: null, status: 'pending', page: 1 });\n\n      API.getPhoto(query, page)\n        .then(pictures => {\n          if (pictures.total === 0) {\n            return toast.error(`No result for ${query}. Try another query`);\n          }\n          this.setState({\n            pictures: pictures.hits,\n          });\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }))\n        .finally(() =>\n          this.setState(prevState => {\n            return { status: 'idle', page: prevState.page + 1 };\n          }),\n        );\n    }\n  }\n\n  getNextPagePictures = () => {\n    const { page } = this.state;\n    const { query } = this.props;\n\n    this.setState({ status: 'pending' });\n\n    API.getPhoto(query, page)\n      .then(pictures => {\n        if (pictures.hits.length === 0) {\n          console.log('lenght 0');\n          toast.warning(`No more pictures for \"${query}\" query`);\n          return;\n        }\n        this.setState(prevState => {\n          return {\n            pictures: [...prevState.pictures, ...pictures.hits],\n            page: prevState.page + 1,\n          };\n        });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      .finally(() => this.setState({ status: 'idle' }));\n  };\n\n  toggleModal = url => {\n    this.setState(prevState => {\n      return {\n        isModalOpen: !prevState.isModalOpen,\n        modalUrl: url,\n      };\n    });\n  };\n\n  render() {\n    const { pictures, error, status, isModalOpen, modalUrl } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <>\n          <ul className={s.ImageGallery}>\n            {pictures &&\n              pictures.map(picture => (\n                <ImageGalleryItem\n                  key={picture.id}\n                  url={picture.webformatURL}\n                  tags={picture.tags}\n                  modalUrl={picture.largeImageURL}\n                  onClick={this.toggleModal}\n                />\n              ))}\n          </ul>\n          {pictures && <Button onClick={this.getNextPagePictures} />}\n          {isModalOpen && <Modal onClose={this.toggleModal} url={modalUrl} />}\n        </>\n      );\n    }\n\n    if (status === 'rejected') {\n      return <h2>{error.message}</h2>;\n    }\n\n    if (status === 'pending') {\n      return (\n        <>\n          <ul className={s.ImageGallery}>\n            {pictures &&\n              pictures.map(picture => (\n                <ImageGalleryItem key={picture.id} url={picture.webformatURL} tags={picture.tags} />\n              ))}\n          </ul>\n          <Loader />\n          <Button onClick={this.getNextPagePictures} />\n        </>\n      );\n    }\n  }\n}\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nclass App extends Component {\n  state = {\n    query: '',\n    loading: false,\n  };\n\n  componentDidMount() {}\n\n  onSubmit = query => {\n    this.setState({ query });\n    console.log(query);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSubmit} />\n        {/* {this.state.loading && <h1> Downloading... </h1>} */}\n        <ImageGallery query={this.state.query} />\n\n        <ToastContainer autoClose={3000} position=\"top-left\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1x92C\",\"SearchForm\":\"Searchbar_SearchForm__16Q8x\",\"SearchFormButton\":\"Searchbar_SearchFormButton__19tXD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__guyvP\",\"SearchFormInput\":\"Searchbar_SearchFormInput__sjcg-\"};"],"sourceRoot":""}